name: Java CI with Maven

env:
  STACK: java
  CONTINUE_ON_ERROR: false
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  TOMCAT_HOST: 3.134.247.4
  ARTIFACT_PATH: target/*war
  DESTINATION_PATH: /opt/apache-tomcat-9.0.56/webapps/springboot.war  
  
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout repository on branch: ${{ github.REF }}'
      uses: actions/checkout@v1
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        ref: ${{ github.REF }}
        fetch-depth: 0
        
    - name: set up JDK 1.8
      id: setup_jdk
      if: ${{ env.STACK == 'java' }}
      uses: actions/setup-java@v1
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        java-version: '1.8'
        
    - name: Build with Maven
      run: mvn clean package --file pom.xml
      
#     - name: SonarQube Scan
#       run: mvn sonar:sonar -Dsonar.host.url=${{ env.SONAR_HOST_URL }} -Dsonar.login=${{ env.SONAR_TOKEN }}
#     - uses: sonarsource/sonarqube-scan-action@master 
#       with:
#         args: >
#           -Dsonar.projectKey=hello-springboot
#           -Dsonar.sources=src/
          
    - name: Upload repo to remote server
      env:
           SSH_AUTH_SOCK: /tmp/ssh_agent.sock    
      run: |
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.SSH_KEY }}"
        scp -o StrictHostKeyChecking=no ${{ env.ARTIFACT_PATH }} ${{ secrets.TOMCAT_USER }}@${{ env.TOMCAT_HOST }}:${{ env.DESTINATION_PATH }}
